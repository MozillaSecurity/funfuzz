sudo: required  # has ~2x RAM: https://docs.travis-ci.com/user/reference/overview/#Virtualization-environments
group: travis_latest
language: python
cache: pip
matrix:
  fast_finish: true
  include:
    - python: "3.6"
      dist: xenial
      env: >
        BUILD="--enable-debug --disable-optimize --enable-more-deterministic
        --build-with-valgrind --enable-oom-breakpoint"
      addons:
        apt:
          update: true
          config:
            retries: true
          # sources:
          #   - ubuntu-toolchain-r-test
          packages:
            - autoconf2.13
            - expect-dev  # unbuffer requires this
            # Travis Xenial does not have ubuntu-toolchain-r-test yet: https://git.io/fNfj9
            # - g++-6
            # - g++-6-multilib
            # - gcc-6
            # - gcc-6-multilib
            - gdb
            - lib32z1  # needed by 32-bit builds
            - libc6-dbg  # needed by Valgrind
            - valgrind
    - python: "3.6"
      dist: xenial
      env: >
        BUILD="--disable-debug --disable-profiling --without-intl-api"
      addons:
        apt:
          update: true
          config:
            retries: true
          # sources:
          #   - ubuntu-toolchain-r-test
          packages:
            - autoconf2.13
            - expect-dev  # unbuffer requires this
            # Travis Xenial does not have ubuntu-toolchain-r-test yet: https://git.io/fNfj9
            # - g++-6
            # - g++-6-multilib
            # - gcc-6
            # - gcc-6-multilib
            - gdb
            - lib32z1  # needed by 32-bit builds
            - libc6-dbg  # needed by Valgrind
            - valgrind
    - python: "3.7"
      dist: xenial
      env: >
        BUILD="--enable-debug --disable-optimize --enable-more-deterministic
        --build-with-valgrind --enable-oom-breakpoint"
      addons:
        apt:
          update: true
          config:
            retries: true
          # sources:
          #   - ubuntu-toolchain-r-test
          packages:
            - autoconf2.13
            - expect-dev  # unbuffer requires this
            # Travis Xenial does not have ubuntu-toolchain-r-test yet: https://git.io/fNfj9
            # - g++-6
            # - g++-6-multilib
            # - gcc-6
            # - gcc-6-multilib
            - gdb
            - lib32z1  # needed by 32-bit builds
            - libc6-dbg  # needed by Valgrind
            - valgrind
    - python: "3.7"
      dist: xenial
      env: >
        BUILD="--disable-debug --disable-profiling --without-intl-api"
      addons:
        apt:
          update: true
          config:
            retries: true
          # sources:
          #   - ubuntu-toolchain-r-test
          packages:
            - autoconf2.13
            - expect-dev  # unbuffer requires this
            # Travis Xenial does not have ubuntu-toolchain-r-test yet: https://git.io/fNfj9
            # - g++-6
            # - g++-6-multilib
            # - gcc-6
            # - gcc-6-multilib
            - gdb
            - lib32z1  # needed by 32-bit builds
            - libc6-dbg  # needed by Valgrind
            - valgrind
    # Sanity checks, so only run debug builds
    - python: "nightly"
      dist: xenial
      env: >
        BUILD="--enable-debug --disable-optimize --enable-more-deterministic
        --build-with-valgrind --enable-oom-breakpoint"
      addons:
        apt:
          update: true
          config:
            retries: true
          # sources:
          #   - ubuntu-toolchain-r-test
          packages:
            - autoconf2.13
            - expect-dev  # unbuffer requires this
            # Travis Xenial does not have ubuntu-toolchain-r-test yet: https://git.io/fNfj9
            # - g++-6
            # - g++-6-multilib
            # - gcc-6
            # - gcc-6-multilib
            - gdb
            - lib32z1  # needed by 32-bit builds
            - libc6-dbg  # needed by Valgrind
            - valgrind
  allow_failures:
    - python: "nightly"
before_install:
  # Use GCC 6
  # - |
  #   if [ `which gcc-6` ] && [ `which g++-6` ] ; then
  #     mkdir -p latest-gcc-symlinks  # See https://git.io/vx1sH
  #     ln -s /usr/bin/g++-6 latest-gcc-symlinks/g++
  #     ln -s /usr/bin/gcc-6 latest-gcc-symlinks/gcc
  #     PATH=$PWD/latest-gcc-symlinks:$PATH
  #     # Be explicit for the Mozilla build system to pick up GCC 6
  #     export CC=$PWD/latest-gcc-symlinks/gcc
  #     export CXX=$PWD/latest-gcc-symlinks/g++
  #   else
  #     echo 'gcc-6 and g++-6 are both not found...'
  #   fi
  - gcc --version
  - g++ --version
  - clang --version
  - clang++ --version
  - llvm-symbolizer --version || true  # Ignore exit code if llvm-symbolizer does not exist
  - which llvm-config || true  # Find out location of llvm-config
  - export LLVM_CONFIG=/usr/local/clang-7.0.0/bin/llvm-config  # From llvm-config location
  - llvm-config --version || true  # Ignore exit code if llvm-config does not exist
  - /usr/bin/llvm-config --version || true  # Ignore exit code if llvm-config does not exist
  # Ensure latest Rust is installed
  - curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path
  - source $HOME/.cargo/env
  - rustup update stable
  - which rustup
  - rustup --version
  - which rustc
  - rustc --version
install:
  # Already in venv, no need for --user
  - travis_retry python -m pip install --upgrade setuptools pip
  - travis_retry python -m pip --version
  - travis_retry python -m pip install --upgrade google-compute-engine  # For boto to work in Travis
  - travis_retry python -m pip install --upgrade .[test]  # Installs python testing-related packages
  - travis_retry python -m pip install --upgrade -r requirements.txt  # Gets FuzzManager, lithium-reducer from GitHub
  - git --version
  - hg --version
  - python3 --version
  # Linters may not work properly in latest Python nightly on Travis
  - if [ ! $TRAVIS_PYTHON_VERSION == "nightly" ] ; then python -m flake8 --version ; fi
  - if [ ! $TRAVIS_PYTHON_VERSION == "nightly" ] ; then python -m pylint --version ; fi
before_script:
  # Run shellcheck and bashate on shell scripts
  - for file in $(find . -type f -name "*.sh"); do shellcheck --format=gcc $file; done;
  - travis_retry python -m pip install --upgrade bashate
  - for file in $(find . -type f -name "*.sh"); do bashate $file; done;
  # To run everything locally in local funfuzz github repository directory:
  #   python -m pytest --flake8 --pylint --cov=`pwd` --cov-report term-missing
  # Compile-related tests are expected to fail at this stage (skip pylint with development Python versions)
  - |
    if [ $TRAVIS_PYTHON_VERSION == "nightly" ] ; then
      # Work around astroid failing in Python nightly
      python -m pip uninstall -y pylint astroid
      # Work around flake8 failing in Python nightly
      python -m pytest -s -p no:flake8,cov -m "not slow"
      # python -m pytest -s --flake8 -p no:pylint,cov -m "not slow"
    else
      python -m pytest -s --flake8 --pylint --pylint-jobs=2 -p no:cov -m "not slow"
    fi
  - mkdir -p $HOME/trees/
  # aria2 / wget do not seem to have greater reliability than hg clone, so not using get_hg_repo.sh
  - time hg clone --stream https://hg.mozilla.org/mozilla-central/ $HOME/trees/mozilla-central
script:
  - travis_wait 50 unbuffer python -m pytest -s -p no:flake8,pylint --cov --cov-report term-missing
after_failure:
  - tail -n 100 $HOME/shell-cache/*/*.busted*
after_success:
  - travis_retry codecov
